#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
###################################################################################################################
This script read epochs, cos_similarities data, and plot them.
The Training-01-all21-N-Human345_Cyno76-Full_Semi.
Train-Human/Cyno-N

Testing-01-N-2202-P4M, Testing-02-N-HCD-20-25-40-45, Testing-03-N-HCD-30.
Test-Human-N-SCE, Test-Human-N-High-SCE, Test-Human-N-Single-SCE.

The batch sizes are 32, learning rates are 2.

Created on 04 November 2022.
###################################################################################################################
"""
__author__ = 'ZLiang'

import matplotlib.pyplot as plt
import numpy as np

# Cosine similarities for different test cases. Totally 50 scores for each test.
# These are used for the y-axis.
# The values are from the epochs of
#   1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51,
#   53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99.


test_1_mean = [0.9256342964050569, 0.9333575551084876, 0.9334470213430508, 0.9346139094257446, 0.9355894112890939,
             0.9368624525225829, 0.9369504797792653, 0.9367601580950042, 0.9368811841338044, 0.937044485899547,
             0.9370830362919698, 0.9367998673802609, 0.936672741947945,  0.9368509373692433, 0.9364673433801833,
             0.9372316187736588, 0.936507042101461,  0.9371168510147077, 0.9373730881716349, 0.9372218597914093,
             0.9365208588566163, 0.9370452542709757, 0.9374035611983563, 0.935859954281638,  0.9385614171092067,
             0.9376767710436438, 0.9365532893082336, 0.9366016419218472, 0.9376292094033511, 0.9371852495409452,
             0.9355746047737685, 0.9380862787742764, 0.9380515273343637, 0.9371119250299319, 0.9378525707364646,
             0.937100019763199,  0.9373378073571399, 0.9375579845810471, 0.9374551807896379, 0.9372813050081171,
             0.9370330982353031, 0.9368483933245886, 0.9373056251880839, 0.9376657269865862, 0.9360708608633048,
             0.937114826466118,  0.9378802981031592, 0.9371791301062997, 0.9375636429054262, 0.9367810666450825,
             ]

test_1_median = [0.9559930551076132, 0.9623064676431463, 0.9626135404442395, 0.9627047458913698, 0.9635623596041298,
               0.9650871170119175, 0.9646443369404798, 0.9652428939463333, 0.96519783020193,   0.9646292400452141,
               0.9656500035993556, 0.9642571763865291, 0.9646469192699545, 0.9656618730409042, 0.9643487518817399,
               0.9652904364521923, 0.9652773694472715, 0.9646247092723206, 0.9652884298483655, 0.9650146180926751,
               0.9653401726905694, 0.9642820000252328, 0.9653692565373024, 0.9639184650513983, 0.9655662523683344,
               0.9649125453205276, 0.9649163623714907, 0.9643372070480309, 0.9654969505207005, 0.9651112696299625,
               0.9643947451194517, 0.9650702822927707, 0.9654725967801497, 0.9644830391709178, 0.9653148356686169,
               0.96518841678775,   0.9648523992665339, 0.965495444036905,  0.9655398123835663, 0.9651903843571685,
               0.9654243784440906, 0.9653939184742685, 0.9649403886797892, 0.965378102409823,  0.963904994874295,
               0.9653343798849983, 0.9653275270305604, 0.9653472471073419, 0.965383233506157,  0.9652279867173872,
               ]


test_2_mean = [0.8081994986832255, 0.8164211001017947, 0.8171707902068472, 0.8135173399649783, 0.8107787412909756,
             0.8135155510938706, 0.8179863390511433, 0.813487804485062,  0.8132754981410028, 0.8187794399165912,
             0.8165707090452334, 0.821672556022145,  0.8154215318747782, 0.8110874572922852, 0.8100405949390209,
             0.8145425176926908, 0.8123406235497967, 0.8172078325831718, 0.8172274666250583, 0.8100459152026049,
             0.811634166080638,  0.8146344339381402, 0.8133976599197069, 0.8073661857048461, 0.818574622229774,
             0.8126494349425251, 0.8111806605953965, 0.8126917990227247, 0.814535243353575,  0.8142253825661779,
             0.8128816259253033, 0.8176204883370247, 0.8151090745872631, 0.8168133457267313, 0.8162465362375889,
             0.8142582583515985, 0.8172868892067289, 0.8116099500359725, 0.8145844343701686, 0.8147805204159132,
             0.816167734298252,  0.8171745147294932, 0.8150926511748771, 0.8127104407747533, 0.8115761206737039,
             0.8160901598504771, 0.815657583790016,  0.8145927167525886, 0.8161324914133853, 0.8134444117546842,
             ]

test_2_median = [0.84725024847579,   0.8544954028227862, 0.8549128903878911, 0.8503319838614725, 0.8500073151331082,
               0.8524678692585627, 0.856208586300242,  0.8534901083240142, 0.8551673890866209, 0.8549984535774746,
               0.8563104745473843, 0.8576827192475509, 0.8514748229261856, 0.8538058566264266, 0.8469286207736357,
               0.8514154099584904, 0.8522286913254999, 0.855902666285011,  0.856603673919236,  0.849770017485546,
               0.8531107895985092, 0.8490972150410869, 0.8499656252944948, 0.8458258535687764, 0.8540623852465955,
               0.8523303681269306, 0.8505796737088064, 0.8522549337078303, 0.8529171545318589, 0.8494394566435965,
               0.8512906060629655, 0.8563382355889192, 0.8538390017055166, 0.8543721639294298, 0.8554143324461988,
               0.853739816985113,  0.8571215135400134, 0.8542965110842949, 0.8509152547110638, 0.8530169403865036,
               0.8519223237742051, 0.855192161663132,  0.8542343354479868, 0.8524391729303813, 0.8529325330738144,
               0.8583256767162203, 0.8518635410150797, 0.8499547298397847, 0.8543869021367506, 0.8538341188694021,
               ]

test_3_mean = [0.5590704282423714, 0.5752552626690118, 0.5613886456743621, 0.5576885716777487, 0.5543492456560675,
             0.5635624242105866, 0.5647488168767939, 0.5599935755306221, 0.5611766490303031, 0.5780974022286803,
             0.5755109476029907, 0.5761470430736297, 0.5747049570837997, 0.552805136458553,  0.5642530564471271,
             0.569174321897356,  0.5678072383234555, 0.5620873101519879, 0.5679978342617236, 0.5587714002719688,
             0.55427037590272,   0.5584275635333813, 0.5580821686864642, 0.5550762849429886, 0.5697750905607234,
             0.5584541404702618, 0.5645525294586985, 0.553654964792665,  0.562712703288046,  0.5607109238068929,
             0.5586511994445787, 0.5604872846912418, 0.5617681960621592, 0.5657902633515993, 0.5669483302001026,
             0.5543109194586879, 0.5673475777123437, 0.5528708452852699, 0.5611015761717377, 0.5575129974189851,
             0.5616253942716294, 0.5646265607656082, 0.5641809231697181, 0.5519864296938236, 0.5565092025766907,
             0.5543113787798669, 0.5613393051991191, 0.5664461395259903, 0.5600901916241777, 0.5541499186061809,
             ]

test_3_median = [0.5798381133263488, 0.5999253966330441, 0.5901573322859361, 0.5760001470409924, 0.5765691125050635,
               0.5913722171671183, 0.591308910855695,  0.5853916103429941, 0.5887990186091601, 0.6033186095990406,
               0.5992015949897731, 0.6013544229659245, 0.5992929290543266, 0.5747394499978733, 0.5923265140463743,
               0.5934797922041836, 0.5936650496793555, 0.5864192911757509, 0.5937756384387622, 0.578971261304172,
               0.5777664815313601, 0.5856750715695955, 0.5840586572013547, 0.5774737675162851, 0.5902457886026542,
               0.576649414705554,  0.5861156365742254, 0.5756225974467064, 0.5823907124998211, 0.5846452475386605,
               0.5780324414537684, 0.5828010261956049, 0.5806262552134225, 0.5835278413934676, 0.5957455405164531,
               0.5759597628657217, 0.5888330901790289, 0.5754711163778231, 0.5846340773837868, 0.5773721046641698,
               0.5831926154674296, 0.5836468889557827, 0.5851350336906389, 0.5719280493479348, 0.5771107812584592,
               0.5779809901901005, 0.5714348927992714, 0.5868570837505214, 0.5846943160692307, 0.5801438459413457,
               ]


# The number of epochs for the training.
x = np.arange(1, 51)

# Create the size of the figure.
fig=plt.figure(num=1, figsize=(20, 10))

# Set the size of subplot and starting point, set three styles for the plot
ax=fig.add_subplot(111)
ax.plot(x, test_1_mean, "r--.", label="Mean for Test-Human-N-SCE on Train-Human/Cyno-N, batch size=32, learning rate=0.0002")
ax.plot(x, test_1_median, "r-x", label="Median for Test-Human-N-SCE on Train-Human/Cyno-N, batch size=32, learning rate=0.0002")
ax.plot(x, test_2_mean, "b-.^", label="Mean for Test-Human-N-High-SCE on Train-Human/Cyno-N, batch size=32, learning rate=0.0002")
ax.plot(x, test_2_median, "b--+", label="Median for Test-Human-N-High-SCE on Train-Human/Cyno-N, batch size=32, learning rate=0.0002")
ax.plot(x, test_3_mean, "g-.,", label="Mean for Test-Human-N-Single-SCE on Train-Human/Cyno-N, batch size=32, learning rate=0.0002")
ax.plot(x, test_3_median, "g-x", label="Median for Test-Human-N-Single-SCE on Train-Human/Cyno-N, batch size=32, learning rate=0.0002")

# Set the scales for x-axis and y-axis.
ax.set_xlim([1, 50.1])
ax.set_ylim([0.30, 1.00])

# Set the scales for the display of x-axis and y-axis.
# np.linspace() is arithmetic progressionï¼Œ from 1 to 50
ax.set_xticks(np.linspace(1, 50, 50))
ax.set_yticks(np.linspace(0.30, 1.00, 8))

# Set the labels for the scales
ax.set_xticklabels(["1", "3", "5", "7", "9", "11", "13", "15", "17", "19", "21", "23", "25", "27", "29", "31", "33",
                    "35", "37", "39", "41", "43", "45", "47", "49", "51", "53", "55", "57", "59", "61", "63", "65",
                    "67", "69", "71", "73", "75", "77", "79", "81", "83", "85", "87", "89", "91", "93", "95", "97",
                    "99"],
                   fontproperties="monospace", fontsize=12, rotation=10)
ax.set_yticklabels(["0.30", "0.40", "0.50", "0.60", "0.70", "0.80", "0.90", "1.00"])

# Set the decorations for the scales and labels
ax.tick_params(left=False, pad=8, direction="in", length=2, width=3, color="b", labelsize=12)
ax.tick_params("x", labelrotation=10)

# Set the labels for x and y
ax.set_xlabel("Epochs", fontsize=16)
ax.set_ylabel("Cos Similarity", fontsize=16)

# Set the title
#ax.set_title("Figure for Epochs and Cosine Similarities.\n"
#             "Train-Human/Cyno-N, Test-Human-N-SCE, Test-Human-N-High-SCE, Test-Human-N-Single-SCE.",
#             fontsize=18, backgroundcolor='#E1D5E7', fontweight='bold', color='black', verticalalignment="baseline")

# Set the spines
ax.spines["left"].set_color("darkblue")
ax.spines["bottom"].set_linewidth(2)

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)
ax.spines["left"].set_visible(False)

# Set the annotations
#ax.annotate(s="Max:0.960398",xy=(17,0.94),xytext=(17.2,0.87),arrowprops=dict(facecolor="g",shrink=0.05,headwidth=12,
#                                                                          headlength=6, width=4),fontsize=12)
#ax.annotate(s="Min:0.421085",xy=(1,0.4),xytext=(1.2,0.33),arrowprops=dict(facecolor="b",shrink=0.05,headwidth=12,
#                                                                          headlength=6, width=4),fontsize=12)

# Set the legend
ax.legend(loc=3, labelspacing=1, handlelength=3, fontsize=14, shadow=True)

plt.show()